{"ast":null,"code":"var _jsxFileName = \"/Users/matteopolo/reactProjects/Brewdog/src/components/AddFavouritesStar.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useGlobalContext } from '../context';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddFavouritesStar = el => {\n  _s();\n\n  const {\n    favouritesArray,\n    setFavouritesArray\n  } = useGlobalContext();\n  const [favourites, setFavourites] = useState(localStorage.getItem(el.name) === 'true' ? true : false);\n  const [starIcon, setStarIcon] = useState( /*#__PURE__*/_jsxDEV(StarBorderIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 46\n  }, this));\n  useEffect(() => {\n    if (favourites) {\n      setStarIcon( /*#__PURE__*/_jsxDEV(StarIcon, {\n        sx: {\n          fontSize: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this));\n    } else {\n      setStarIcon( /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n        sx: {\n          fontSize: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this));\n    }\n  }, [favourites]);\n\n  const saveFavourites = () => {\n    //save favourite on localstorage\n    localStorage.setItem(el.name, !favourites);\n    setFavourites(!favourites); //save favourite on useState\n\n    let backupArray = [...favouritesArray];\n    const searchFavourite = backupArray.findIndex(item => item.id === el.id);\n\n    if (searchFavourite === -1) {\n      backupArray.push({\n        id: el.id,\n        name: el.name,\n        abv: el.abv,\n        isFavourite: !favourites\n      });\n    } else {\n      backupArray[searchFavourite] = {\n        id: el.id,\n        name: el.name,\n        abv: el.abv,\n        isFavourite: !favourites\n      };\n    }\n\n    setFavouritesArray(backupArray); //save favourite as json on localstorage\n\n    localStorage.setItem('jsonOnLocalstorage', JSON.stringify(backupArray));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"starIcon\",\n    onClick: e => {\n      e.stopPropagation();\n      saveFavourites();\n    },\n    children: starIcon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddFavouritesStar, \"kTKGQm8Q7GiO7fQz2UJdtH2Hrtc=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = AddFavouritesStar;\nexport default AddFavouritesStar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFavouritesStar\");","map":{"version":3,"sources":["/Users/matteopolo/reactProjects/Brewdog/src/components/AddFavouritesStar.js"],"names":["useEffect","useState","useGlobalContext","StarBorderIcon","StarIcon","AddFavouritesStar","el","favouritesArray","setFavouritesArray","favourites","setFavourites","localStorage","getItem","name","starIcon","setStarIcon","fontSize","saveFavourites","setItem","backupArray","searchFavourite","findIndex","item","id","push","abv","isFavourite","JSON","stringify","e","stopPropagation"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,MAAMC,iBAAiB,GAAIC,EAAD,IAAQ;AAAA;;AAE9B,QAAM;AACFC,IAAAA,eADE;AAEFC,IAAAA;AAFE,MAGFN,gBAAgB,EAHpB;AAKA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACU,YAAY,CAACC,OAAb,CAAqBN,EAAE,CAACO,IAAxB,MAAkC,MAAlC,GAA2C,IAA3C,GAAkD,KAAnD,CAA5C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,eAAC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,UAAJ,EAAgB;AACZM,MAAAA,WAAW,eAAC,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,cAAD,CAAX;AACH,KAFD,MAEO;AACHD,MAAAA,WAAW,eAAC,QAAC,cAAD;AAAgB,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAApB;AAAA;AAAA;AAAA;AAAA,cAAD,CAAX;AACH;AACJ,GANQ,EAMN,CAACP,UAAD,CANM,CAAT;;AAQA,QAAMQ,cAAc,GAAG,MAAM;AACzB;AACAN,IAAAA,YAAY,CAACO,OAAb,CAAqBZ,EAAE,CAACO,IAAxB,EAA8B,CAACJ,UAA/B;AACAC,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb,CAHyB,CAIzB;;AACA,QAAIU,WAAW,GAAG,CAAC,GAAGZ,eAAJ,CAAlB;AACA,UAAMa,eAAe,GAAGD,WAAW,CAACE,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYjB,EAAE,CAACiB,EAA7C,CAAxB;;AACA,QAAIH,eAAe,KAAK,CAAC,CAAzB,EAA4B;AACxBD,MAAAA,WAAW,CAACK,IAAZ,CAAiB;AAAED,QAAAA,EAAE,EAAEjB,EAAE,CAACiB,EAAT;AAAaV,QAAAA,IAAI,EAAEP,EAAE,CAACO,IAAtB;AAA4BY,QAAAA,GAAG,EAAEnB,EAAE,CAACmB,GAApC;AAAyCC,QAAAA,WAAW,EAAE,CAACjB;AAAvD,OAAjB;AACH,KAFD,MAEO;AAAEU,MAAAA,WAAW,CAACC,eAAD,CAAX,GAA+B;AAAEG,QAAAA,EAAE,EAAEjB,EAAE,CAACiB,EAAT;AAAaV,QAAAA,IAAI,EAAEP,EAAE,CAACO,IAAtB;AAA4BY,QAAAA,GAAG,EAAEnB,EAAE,CAACmB,GAApC;AAAyCC,QAAAA,WAAW,EAAE,CAACjB;AAAvD,OAA/B;AAAoG;;AAC7GD,IAAAA,kBAAkB,CAACW,WAAD,CAAlB,CAVyB,CAWzB;;AACAR,IAAAA,YAAY,CAACO,OAAb,CAAqB,oBAArB,EAA2CS,IAAI,CAACC,SAAL,CAAeT,WAAf,CAA3C;AACH,GAbD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAGU,CAAD,IAAO;AAAEA,MAAAA,CAAC,CAACC,eAAF;AAAqBb,MAAAA,cAAc;AAAI,KAAnF;AAAA,cAAsFH;AAAtF;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CApCD;;GAAMT,iB;UAKEH,gB;;;KALFG,iB;AAsCN,eAAeA,iBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useGlobalContext } from '../context';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\n\nconst AddFavouritesStar = (el) => {\n\n    const {\n        favouritesArray,\n        setFavouritesArray,\n    } = useGlobalContext();\n\n    const [favourites, setFavourites] = useState(localStorage.getItem(el.name) === 'true' ? true : false);\n    const [starIcon, setStarIcon] = useState(<StarBorderIcon />);\n\n    useEffect(() => {\n        if (favourites) {\n            setStarIcon(<StarIcon sx={{ fontSize: 30 }} />)\n        } else {\n            setStarIcon(<StarBorderIcon sx={{ fontSize: 30 }} />)\n        }\n    }, [favourites])\n\n    const saveFavourites = () => {\n        //save favourite on localstorage\n        localStorage.setItem(el.name, !favourites);\n        setFavourites(!favourites);\n        //save favourite on useState\n        let backupArray = [...favouritesArray];\n        const searchFavourite = backupArray.findIndex(item => item.id === el.id);\n        if (searchFavourite === -1) {\n            backupArray.push({ id: el.id, name: el.name, abv: el.abv, isFavourite: !favourites });\n        } else { backupArray[searchFavourite] = { id: el.id, name: el.name, abv: el.abv, isFavourite: !favourites } }\n        setFavouritesArray(backupArray);\n        //save favourite as json on localstorage\n        localStorage.setItem('jsonOnLocalstorage', JSON.stringify(backupArray));\n    }\n\n    return (\n        <div className='starIcon' onClick={(e) => { e.stopPropagation(); saveFavourites() }}>{starIcon}</div>\n    )\n}\n\nexport default AddFavouritesStar;"]},"metadata":{},"sourceType":"module"}