{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst useFetch = query => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [isError, setIsError] = useState(false);\n  let url = `https://api.punkapi.com/v2/beers${query}`;\n  console.log(url);\n  useEffect(() => {\n    (async () => {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        const response = await axios.get(url);\n        setData(response.data);\n        setIsLoading(true);\n      } catch (err) {\n        setIsError(true);\n      }\n    })(url);\n  }, [url]);\n  return {\n    isLoading,\n    data,\n    isError\n  };\n};\n\n_s(useFetch, \"cCisWyMzPr2Btj7IIwGURH9NaIE=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/matteopolo/reactProjects/Brewdog/src/useFetch.js"],"names":["useState","useEffect","axios","useFetch","query","isLoading","setIsLoading","data","setData","isError","setIsError","url","console","log","response","get","err"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEA,MAAIW,GAAG,GAAI,mCAAkCP,KAAM,EAAnD;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTS,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACA,cAAMQ,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUJ,GAAV,CAAvB;AACAH,QAAAA,OAAO,CAACM,QAAQ,CAACP,IAAV,CAAP;AACAD,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,OAJD,CAIE,OAAOU,GAAP,EAAY;AACVN,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,KAVD,EAUGC,GAVH;AAWH,GAZQ,EAYN,CAACA,GAAD,CAZM,CAAT;AAaA,SAAO;AAAEN,IAAAA,SAAF;AAAaE,IAAAA,IAAb;AAAmBE,IAAAA;AAAnB,GAAP;AAEH,CAvBD;;GAAMN,Q;;AAyBN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst useFetch = (query) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState([]);\n    const [isError, setIsError] = useState(false);\n\n    let url = `https://api.punkapi.com/v2/beers${query}`;\n    console.log(url);\n\n    useEffect(() => {\n        (async () => {\n            setIsError(false);\n            setIsLoading(true);\n            try {\n                const response = await axios.get(url);\n                setData(response.data);\n                setIsLoading(true);\n            } catch (err) {\n                setIsError(true);\n            }\n        })(url)\n    }, [url]);\n    return { isLoading, data, isError };\n\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}