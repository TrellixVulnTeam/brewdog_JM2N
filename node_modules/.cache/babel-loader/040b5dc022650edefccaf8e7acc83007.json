{"ast":null,"code":"var _jsxFileName = \"/Users/matteopolo/reactProjects/Brewdog/src/components/ItemBeer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useGlobalContext } from '../context';\nimport { ListGroup } from 'react-bootstrap';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemBeer = _ref => {\n  _s();\n\n  let {\n    el\n  } = _ref;\n  let navigate = useNavigate();\n  const {\n    favouritesArray,\n    setFavouritesArray\n  } = useGlobalContext();\n  const [favourites, setFavourites] = useState(localStorage.getItem(el.name) === 'true' ? true : false);\n  const [starIcon, setStarIcon] = useState( /*#__PURE__*/_jsxDEV(StarBorderIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 46\n  }, this));\n  useEffect(() => {\n    if (favourites) {\n      setStarIcon( /*#__PURE__*/_jsxDEV(StarIcon, {\n        sx: {\n          fontSize: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this));\n    } else {\n      setStarIcon( /*#__PURE__*/_jsxDEV(StarBorderIcon, {\n        sx: {\n          fontSize: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this));\n    }\n  }, [favourites]);\n\n  const saveFavourites = () => {\n    //save favourite on localstorage\n    localStorage.setItem(el.name, !favourites);\n    setFavourites(!favourites); //save favourite on useState\n\n    let backupArray = [...favouritesArray];\n    const searchFavourite = backupArray.findIndex(item => item.id === el.id);\n\n    if (searchFavourite === -1) {\n      backupArray.push({\n        id: el.id,\n        name: el.name,\n        abv: el.abv,\n        isFavourite: !favourites\n      });\n    } else {\n      backupArray[searchFavourite] = {\n        id: el.id,\n        name: el.name,\n        abv: el.abv,\n        isFavourite: !favourites\n      };\n    }\n\n    setFavouritesArray(backupArray); //save favourite as json on localstorage\n\n    localStorage.setItem('jsonOnLocalstorage', JSON.stringify(backupArray));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    as: \"li\",\n    className: \"d-flex justify-content-between\",\n    onClick: () => {\n      navigate(`beers/${el.id}`);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: el.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-5\",\n        children: [el.abv, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"starIcon\",\n        onClick: () => {\n          event.stopPropagation();\n          saveFavourites();\n        },\n        children: starIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemBeer, \"6+SdwUv6Mww0uH4ovlVbQNQOjqE=\", false, function () {\n  return [useNavigate, useGlobalContext];\n});\n\n_c = ItemBeer;\nexport default ItemBeer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemBeer\");","map":{"version":3,"sources":["/Users/matteopolo/reactProjects/Brewdog/src/components/ItemBeer.js"],"names":["useEffect","useState","useGlobalContext","ListGroup","StarBorderIcon","StarIcon","useNavigate","ItemBeer","el","navigate","favouritesArray","setFavouritesArray","favourites","setFavourites","localStorage","getItem","name","starIcon","setStarIcon","fontSize","saveFavourites","setItem","backupArray","searchFavourite","findIndex","item","id","push","abv","isFavourite","JSON","stringify","event","stopPropagation"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useGlobalContext } from '../context';\nimport { ListGroup, } from 'react-bootstrap';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport StarIcon from '@mui/icons-material/Star';\nimport { useNavigate } from \"react-router-dom\";\n\nconst ItemBeer = ({ el }) => {\n\n    let navigate = useNavigate();\n    const {\n        favouritesArray,\n        setFavouritesArray,\n    } = useGlobalContext();\n\n    const [favourites, setFavourites] = useState(localStorage.getItem(el.name) === 'true' ? true : false);\n    const [starIcon, setStarIcon] = useState(<StarBorderIcon />);\n\n    useEffect(() => {\n        if (favourites) {\n            setStarIcon(<StarIcon sx={{ fontSize: 30 }} />)\n        } else {\n            setStarIcon(<StarBorderIcon sx={{ fontSize: 30 }} />)\n        }\n    }, [favourites])\n\n    const saveFavourites = () => {\n        //save favourite on localstorage\n        localStorage.setItem(el.name, !favourites);\n        setFavourites(!favourites);\n        //save favourite on useState\n        let backupArray = [...favouritesArray];\n        const searchFavourite = backupArray.findIndex(item => item.id === el.id);\n        if (searchFavourite === -1) {\n            backupArray.push({ id: el.id, name: el.name, abv: el.abv, isFavourite: !favourites });\n        } else { backupArray[searchFavourite] = { id: el.id, name: el.name, abv: el.abv, isFavourite: !favourites } }\n        setFavouritesArray(backupArray);\n        //save favourite as json on localstorage\n        localStorage.setItem('jsonOnLocalstorage', JSON.stringify(backupArray));\n    }\n    return (\n        <ListGroup.Item as=\"li\" className='d-flex justify-content-between' onClick={() => { navigate(`beers/${el.id}`) }} >\n            <div>{el.name}</div>\n            <div className='d-flex'>\n                <div className='px-5'>{el.abv}%</div>\n                <div className='starIcon' onClick={() => { event.stopPropagation(); saveFavourites() }}>{starIcon}</div>\n            </div>\n        </ListGroup.Item >\n    )\n}\n\nexport default ItemBeer;"]},"metadata":{},"sourceType":"module"}