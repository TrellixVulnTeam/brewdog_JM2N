{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst useFetch = (page, beerName) => {\n  _s();\n\n  const allBeerUrl = `https://api.punkapi.com/v2/beers?page=${page}`; // const searchUrl = `https://api.punkapi.com/v2/beers?page=${page}&beer_name=${beerName}`;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [isError, setIsError] = useState(false);\n  const url = beerName ? searchUrl : allBeerUrl;\n  useEffect(() => {\n    (async () => {\n      setIsError(false);\n      setIsLoading(false);\n\n      try {\n        const response = await axios.get(url); //   const totalItems = response.headers;\n\n        setData(response.data);\n        console.log(response.data);\n      } catch (err) {\n        setIsError(false);\n      }\n    })(url, page, beerName);\n  }, [url, page, beerName]);\n  return {\n    isLoading,\n    data,\n    isError\n  };\n};\n\n_s(useFetch, \"cCisWyMzPr2Btj7IIwGURH9NaIE=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/matteopolo/reactProjects/Brewdog/src/useFetch.js"],"names":["useState","useEffect","axios","useFetch","page","beerName","allBeerUrl","isLoading","setIsLoading","data","setData","isError","setIsError","url","searchUrl","response","get","console","log","err"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAAA;;AACjC,QAAMC,UAAU,GAAI,yCAAwCF,IAAK,EAAjE,CADiC,CAEjC;;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMa,GAAG,GAAGR,QAAQ,GAAGS,SAAH,GAAeR,UAAnC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTW,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,UAAI;AACA,cAAMO,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUH,GAAV,CAAvB,CADA,CAEA;;AACAH,QAAAA,OAAO,CAACK,QAAQ,CAACN,IAAV,CAAP;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACN,IAArB;AACH,OALD,CAKE,OAAOU,GAAP,EAAY;AACVP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAXD,EAWGC,GAXH,EAWQT,IAXR,EAWcC,QAXd;AAYH,GAbQ,EAaN,CAACQ,GAAD,EAAMT,IAAN,EAAYC,QAAZ,CAbM,CAAT;AAcA,SAAO;AAAEE,IAAAA,SAAF;AAAaE,IAAAA,IAAb;AAAmBE,IAAAA;AAAnB,GAAP;AAEH,CA1BD;;GAAMR,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst useFetch = (page, beerName) => {\n    const allBeerUrl = `https://api.punkapi.com/v2/beers?page=${page}`;\n    // const searchUrl = `https://api.punkapi.com/v2/beers?page=${page}&beer_name=${beerName}`;\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState([]);\n    const [isError, setIsError] = useState(false);\n\n    const url = beerName ? searchUrl : allBeerUrl;\n\n    useEffect(() => {\n        (async () => {\n            setIsError(false);\n            setIsLoading(false);\n            try {\n                const response = await axios.get(url);\n                //   const totalItems = response.headers;\n                setData(response.data);\n                console.log(response.data);\n            } catch (err) {\n                setIsError(false);\n            }\n        })(url, page, beerName)\n    }, [url, page, beerName]);\n    return { isLoading, data, isError };\n\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}