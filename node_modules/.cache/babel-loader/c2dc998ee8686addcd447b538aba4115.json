{"ast":null,"code":"import{Container}from'react-bootstrap';import ReactPaginate from'react-paginate';import{useGlobalContext}from'../context';import{ListGroup}from'react-bootstrap';import ItemBeer from'./ItemBeer';import useFetch from'../useFetch';import ErrorMessage from'./ErrorMessage';import LoadingMessage from'./Loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ResponsePagination=function ResponsePagination(){var _useGlobalContext=useGlobalContext(),setInputPage=_useGlobalContext.setInputPage,query=_useGlobalContext.query;var handlePageClick=function handlePageClick(pagination){setInputPage(pagination.selected+1);};//fetchDati\nvar _useFetch=useFetch(\"\".concat(query)),isLoading=_useFetch.isLoading,data=_useFetch.data,isError=_useFetch.isError;return/*#__PURE__*/_jsxs(_Fragment,{children:[\" \",/*#__PURE__*/_jsx(LoadingMessage,{loading:isLoading}),/*#__PURE__*/_jsx(ErrorMessage,{error:isError}),!isError&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{className:\"my-3\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"gray-txt\",children:[data.length,\" beers found\"]}),/*#__PURE__*/_jsx(ReactPaginate,{previousLabel:'',nextLabel:'',onPageChange:handlePageClick,pageCount:3,containerClassName:'pagination d-flex justify-content-end',pageClassName:'page-item',pageLinkClassName:'page-link_custom',activeClassName:'active_pagination'}),/*#__PURE__*/_jsx(ListGroup,{as:\"ul\",children:data.map(function(el){return/*#__PURE__*/_jsx(ItemBeer,{el:el},el.id);})})]})})]});};export default ResponsePagination;","map":{"version":3,"sources":["/Users/matteopolo/reactProjects/brewdog/src/components/ResponsePagination.js"],"names":["Container","ReactPaginate","useGlobalContext","ListGroup","ItemBeer","useFetch","ErrorMessage","LoadingMessage","ResponsePagination","setInputPage","query","handlePageClick","pagination","selected","isLoading","data","isError","length","map","el","id"],"mappings":"AAAA,OAASA,SAAT,KAA2B,iBAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,OAASC,gBAAT,KAAiC,YAAjC,CACA,OAASC,SAAT,KAA2B,iBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,WAA3B,C,6IAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAE7B,sBAAgCN,gBAAgB,EAAhD,CAAQO,YAAR,mBAAQA,YAAR,CAAsBC,KAAtB,mBAAsBA,KAAtB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,UAAD,CAAgB,CACpCH,YAAY,CAACG,UAAU,CAACC,QAAX,CAAsB,CAAvB,CAAZ,CACH,CAFD,CAIA;AACA,cAAqCR,QAAQ,WAAIK,KAAJ,EAA7C,CAAQI,SAAR,WAAQA,SAAR,CAAmBC,IAAnB,WAAmBA,IAAnB,CAAyBC,OAAzB,WAAyBA,OAAzB,CAEA,mBACI,4CAAG,KAAC,cAAD,EAAgB,OAAO,CAAEF,SAAzB,EAAH,cACI,KAAC,YAAD,EAAc,KAAK,CAAEE,OAArB,EADJ,CAEK,CAACA,OAAD,eAAY,sCACT,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACI,YAAI,SAAS,CAAC,UAAd,WAA0BD,IAAI,CAACE,MAA/B,kBADJ,cAEI,KAAC,aAAD,EACI,aAAa,CAAE,EADnB,CAEI,SAAS,CAAE,EAFf,CAGI,YAAY,CAAEN,eAHlB,CAII,SAAS,CAAE,CAJf,CAKI,kBAAkB,CAAE,uCALxB,CAMI,aAAa,CAAE,WANnB,CAOI,iBAAiB,CAAE,kBAPvB,CAQI,eAAe,CAAE,mBARrB,EAFJ,cAYI,KAAC,SAAD,EAAW,EAAE,CAAC,IAAd,UACKI,IAAI,CAACG,GAAL,CAAS,SAACC,EAAD,qBAAQ,KAAC,QAAD,EAAsB,EAAE,CAAEA,EAA1B,EAAeA,EAAE,CAACC,EAAlB,CAAR,EAAT,CADL,EAZJ,GADS,EAFjB,GADJ,CAuBH,CAlCD,CAmCA,cAAeZ,CAAAA,kBAAf","sourcesContent":["import { Container, } from 'react-bootstrap';\nimport ReactPaginate from 'react-paginate';\nimport { useGlobalContext } from '../context';\nimport { ListGroup, } from 'react-bootstrap';\nimport ItemBeer from './ItemBeer';\nimport useFetch from '../useFetch';\nimport ErrorMessage from './ErrorMessage';\nimport LoadingMessage from './Loading';\n\nconst ResponsePagination = () => {\n\n    const { setInputPage, query } = useGlobalContext();\n\n    const handlePageClick = (pagination) => {\n        setInputPage(pagination.selected + 1);\n    }\n\n    //fetchDati\n    const { isLoading, data, isError } = useFetch(`${query}`);\n\n    return (\n        <> <LoadingMessage loading={isLoading} />\n            <ErrorMessage error={isError} />\n            {!isError && <>\n                <Container className='my-3'>\n                    <h3 className='gray-txt'>{data.length} beers found</h3>\n                    <ReactPaginate\n                        previousLabel={''}\n                        nextLabel={''}\n                        onPageChange={handlePageClick}\n                        pageCount={3}\n                        containerClassName={'pagination d-flex justify-content-end'}\n                        pageClassName={'page-item'}\n                        pageLinkClassName={'page-link_custom'}\n                        activeClassName={'active_pagination'}\n                    />\n                    <ListGroup as=\"ul\">\n                        {data.map((el) => <ItemBeer key={el.id} el={el} />)}\n                    </ListGroup>\n                </Container>\n            </>\n            }\n        </>);\n};\nexport default ResponsePagination;"]},"metadata":{},"sourceType":"module"}